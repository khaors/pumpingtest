% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pumpingtest.R
\name{plot.pumping_test}
\alias{plot.pumping_test}
\title{plot.pumping_test}
\usage{
\method{plot}{pumping_test}(x, type = c("diagnostic", "estimation",
  "model.diagnostic", "uncert", "mcmc.trace", "mcmc.run_mean",
  "mcmc.compare", "mcmc.autocorr", "sample.influence"),
  dmethod = "central", d = 2, scale = "loglog", y.intersp = 0.5,
  slug = FALSE, legend = TRUE, results = FALSE, cex = 1, ...)
}
\arguments{
\item{x}{A pumping_test object}

\item{type}{Type of plot. Current options include
\itemize{
\item diagnostic
\item estimation
\item model.diagnostic
\item uncertainty
\item mcmc.trace
\item mcmc.run_mean
\item mcmc.compare
\item mcmc.autocorr
\item sample.influence
}}

\item{dmethod}{Method to calculate the derivative (central, horner, bourdet, spline)}

\item{d}{Derivative parameter. If method is bourdet then d is a parameter to specify
the number of lags in the derivative. If method is spline then d is the number of points
used to calculate the derivative.}

\item{scale}{Option to define a loglog or semilog diagnostic plot}

\item{y.intersp}{Numeric value to define the interspacing between lines in the legend}

\item{slug}{Logical flag to indicate a slug test}

\item{legend}{Logical flag to indicate if legend is included (only for estimation plot)}

\item{results}{Logical flag to indicate if the estimation results are going to be included in the estimation plot}

\item{cex}{character expansion factor relative to current par("cex"). This is a parameter of the plot functions.}

\item{...}{Additional parameters for the plot, points and lines functions.}
}
\description{
Function to plot the pumping test data. This function can create two different
types of plots: diagnostic and estimation. The diagnostic plot includes the
drawdown vs time plot and the derivative of drawdown with respect to the log of
time. This derivative can help in the identification of the flow regime that
occurred when the data was acquired.
}
\examples{
# Define a pumping test
data(theis)
ptest <- pumping_test("Test", Q = 1.388e-2, r = 250, t = theis$t, s = theis$s)
# Diagnostic plot using default parameters
plot(ptest)
# Diagnostic plot with Horner derivative
plot(ptest, dmethod = 'horner')
# Diagnostic plot with Bourdet derivative d = 3
plot(ptest, dmethod = 'bourdet', d = 3)
# Diagnostic plot with Spline derivative
plot(ptest, dmethod = 'spline', d = 20)
# Diagnostic plot with semilog scale
plot(ptest, scale = 'slog')
#estimation Plot
ptest.fit <- fit(ptest, "theis")
hydraulic.parameters(ptest) <- ptest.fit$hydraulic_parameters
fit.parameters(ptest) <- ptest.fit$parameters
model(ptest) <- "theis"
estimated(ptest) <- TRUE
plot(ptest, type = 'estimation', dmethod = "spline", d = 30, results = FALSE)
# Model Diagnostic plot
plot(ptest, type = 'model.diagnostic')
# Uncertainty plot (bootstrap)
ptest.confint <- confint(ptest, level = c(0.025, 0.975), method = 'bootstrap', n = 30, neval = 100)
hydraulic.parameters(ptest) <- ptest.confint$hydraulic.parameters
hydraulic.parameter.names(ptest) <- ptest.confint$hydraulic.parameters.names
plot(ptest, type = 'uncertainty')
}
\seealso{
Other base functions: \code{\link{additional.parameters<-}},
  \code{\link{confint.pumping_test}},
  \code{\link{confint_bootstrap}},
  \code{\link{confint_jackniffe}},
  \code{\link{confint_wald}}, \code{\link{estimated<-}},
  \code{\link{evaluate}}, \code{\link{fit.optimization}},
  \code{\link{fit.parameters<-}},
  \code{\link{fit.sampling}}, \code{\link{fit}},
  \code{\link{hydraulic.parameter.names<-}},
  \code{\link{hydraulic.parameters<-}},
  \code{\link{model.parameters}}, \code{\link{model<-}},
  \code{\link{plot_model_diagnostic}},
  \code{\link{print.pumping_test}},
  \code{\link{pumping_test}}, \code{\link{simulate}},
  \code{\link{summary.pumping_test}}
}
\author{
Oscar Garcia-Cabrejo \email{khaors@gmail.com}
}
\concept{base functions}
