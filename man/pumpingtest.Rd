% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adaptative_mcmc_utilities.R,
%   R/agarwal_recovery_utilities.R, R/agarwal_skin_utilities.R,
%   R/aquifer_utilities.R, R/boulton_utilities.R, R/bouwer_rice_utilities.R,
%   R/cooper_jacob_utilities.R, R/cooper_utilities.R,
%   R/equivalent_time_utilities.R, R/flow_dimension_utilities.R,
%   R/general_radial_flow_utilities.R, R/gringarten_utilities.R,
%   R/hantush_jacob_utilities.R, R/hvorslev_utilities.R,
%   R/jacob_lohman_utilities.R, R/laplace_inversion_utilities.R,
%   R/neuzil_utilities.R, R/objective_function_utilities.R,
%   R/papadopulos_cooper_utilities.R, R/pumpingtest.R, R/smoothing_utilities.R,
%   R/theis_utilities.R, R/twalk_utilities.R, R/utilities.R,
%   R/warren_root_utilities.R
\docType{package}
\name{pumpingtest}
\alias{pumpingtest}
\alias{pumpingtest-package}
\title{pumpingtest: A package for the analysis and evaluation of aquifer tests}
\description{
The pumpingtest package provides functions to analyze and evaluate aquifer tests.
}
\details{
The package includes the solution to the most common
pumping tests applied in aquifers such as:
\itemize{
\item Theis and Cooper-Jacob solutions (confined aquifer)
\item Hantush-Jacob solution (leaky aquifer)
\item Jacob-Lohman solution (artesian confined aquifer)
\item Boulton solution (phreatic aquifer)
\item Cooper solution (slug tests)
\item Agarwal solution (recovery tests)
\item Agarwal solution (tests with skin effects)
\item General Radial Flow (fractured aquifer)
\item Neuzil solution (pulse tests)
\item Papadopoulous-Cooper solution (large diameter wells)
\item Warren and Root solution (dual porosity aquifer)
\item Gringarten solution (single fracture)
\item Hvorslev solution (slug tests)
\item Bower-Rice solution (slug tests)
}

The estimation of the hydraulic parameter is achieved by different optimization algorithms
including
\itemize{
\item Nonlinear least squares with the Levenberg-Marquart algorithm (package minpack.lm)
\item L-BFGS-B (package optim)
\item Simulated Annealing (package GenSA)
\item Genetic Algorithms(package GA)
\item Particle Swarm Optimization (package PSO)
\item Differential Evolution (package DEoptim)
\item Estimation of Distribution Algorithm using Copulas (package copulaedas)
}
with four possible objective functions:
\itemize{
\item Sum of Squares Residuals
\item Mean Absolute Deviation
\item Maximum Absolute Deviation
\item Maximum Likelihood (under the assumption that the residuals follow a normal distribution).
}
}
\section{Adaptative MCMC Auxiliary functions}{

prior, posterior, proposalfunction_cov, proposalfunction, run_adap_metropolis_MCMC
}

\section{Agarwal functions (Recovery tests)}{


The functions included in this section are:

agarwal_recovery_well_function, agarwal_recovery_solution_initial, agarwal_recovery_calculate_parameters, agarwal_recovery_solution, agarwal_recovery_WF_LT, agarwal_recovery_solution_dlogt, equivalent_time
}

\section{Agarwal functions (Pumping tests with skin effect)}{


The functions included in this section are:

agarwal_skin_well_function, agarwal_skin_solution_initial, agarwal_skin_calculate_parameters, agarwal_skin_solution, agarwal_skin_WF_LT, agarwal_skin_solution_dlogt
}

\section{Aquifer functions}{

The aquifer functions include several functions designed to represent 
several types of aquifers including:
}

\section{Boulton functions}{

boulton_well_function, boulton_solution_initial, boulton_calculate_parameters, boulton_solution, boulton_solution_dlogt, boulton_WF_LT
}

\section{Bouwer Rice functions}{


These functions are used in the estimation of hydraulic parameters using a slug
test

The functions included in this section are:

Acoeff, Bcoeff, Ccoeff, bouwer_rice_well_function, bouwer_rice_solution_initial, bouwer_rice_calculate_parameters, bouwer_rice_solution, bouwer_rice_solution_dlogt
}

\section{Cooper-Jacob functions}{

cooper_jacob_well_function, cooper_jacob_solution_initial, cooper_jacob_calculate_parameters, cooper_jacob_solution
}

\section{Cooper functions}{

cooper_well_function, cooper_solution_initial, cooper_calculate_parameters, cooper_solution, cooper_solution_dlogt, cooper_WF_LT
}

\section{Equivalent_time functions}{


These functions are used in the estimation of the aquifer parameters for the recovery and variable rate tests.

The functions included in this section are:
recovery_equivalent_time, variable_rate_equivalent_time
}

\section{Flow Dimension functions}{

flow_dimension
}

\section{General_radial_flow functions}{


The functions included in this section are:

general_radial_flow_well_function, general_radial_flow_solution_initial, general_radial_flow_calculate_parameters, general_radial_flow_solution, general_radial_flow_WF_LT, general_radial_flow_dlogt
}

\section{Gringarten functions}{


These functions are used in the estimation of pumping tests in a single
fracture aquifers.

The functions included in this section are:

gringarten_well_function, gringarten_solution_initial, gringarten_calculate_parameters, gringarten_solution, gringarten_solution_dlogt
}

\section{Hantush-Jacob functions}{

hantush_jacob_well_function, hantush_jacob_solution_initial, hantush_jacob_calculate_parameters, hantush_jacob_solution, hantush_jacob_solution_dlogt, hantush_jacob_WF_LT
}

\section{Hvorslev functions}{


These functions are used in the estimation of the aquifer parameters using a
slug test.

The functions included in this section are:

hvorslev_well_function, hvorslev_solution_initial, hvorslev_calculate_parameters, hvorslev_solution, hvorslev_solution_dlogt
}

\section{jacob_lohman functions}{

There are two types of functions: F and G. The Jacob_Lohman F functions are used to calculate
drawdown at specific distance from the well, while the Jacob_Lohman G Functions are used to
calculate the discharge at the well or a given distance from it.

The F functions are:

jacob_lohman_F_well_function, jacob_lohman_F_solution_initial, jacob_lohman_F_calculate_parameters, jacob_lohman_F_solution, jacob_lohman_F_solution_dlogt, jacob_lohman_F_WF_LT

The G Functions are

jacob_lohman_G_well_function, jacob_lohman_G_solution_initial, jacob_lohman_G_calculate_parameters, jacob_lohman_G_solution, jacob_lohman_G_solution_dlogt, jacob_lohman_G_WF_LT
}

\section{Laplace Inversion functions}{

stehfest_coeffs, stehfest_inversion
}

\section{Neuzil functions}{


These functions are used in the estimation of pulse tests.

The functions included in this section are:
neuzil_well_function, neuzil_solution_initial, neuzil_calculate_parameters, neuzil_solution, neuzil_WF_LT, neuzil_solution_dlogt
}

\section{Objective Function functions}{

residual_sum_squares, loglikelihood, bc_transf, loglikelihood_bc, mean_absolute_deviation,
max_absolute_deviation, mean_square_error
}

\section{Papadopoulous-Cooper functions}{

papadopulos_cooper_well_function, papadopulos_cooper_solution_initial, papadopulos_cooper_calculate_parameters, papadopulos_cooper_solution, papadopulos_cooper_solution_dlogt, papadopulos_cooper_WF_LT
}

\section{Base functions}{

 The base function includes the contructor of the S3 class pumping_test and associated functions
 to display summaries, print on the console, create diagnostic and estimation plots with
 the information from a pumping test, estimate the hydraulic parameters, and predict.

 The functions in this section are:

 pumping_test, summary, print, plot, fit, evaluate, simulate, confint
}

\section{Smoothing functions}{

bandwidth_lpridge, smoothing.pumping_test
}

\section{Theis functions}{


The Theis solution describes the drawdown variations in a confined, homogeneous, isotropic,
aquifer of infinite horizontal extent due to the water extraction from a well that fully
penetrates the aquifer.

The Functions included here are:

theis_well_function, theis_solution_initial, theis_calculate_parameters, theis_solution, theis_solution_dlogt, rtheis_solution
}

\section{twalk Auxiliary functions}{

psi1, traverse_kernel, walk_kernel, hop_kernel, blow_kernel, log_ratio_density_blow, log_ratio_density_hop, run_twalk_MCMC
}

\section{Utility functions}{

logseq, log_derivative, log_derivative_central, log_derivative_bourdet, log_derivative_spline, log_derivative_spane,
log_derivative_smoothspline, log_derivative_kernel_reg, log_derivative_locpol, log_derivative_lokern,
log_derivative_lpridge
}

\section{Warren and Root functions}{


These functions are used in the estimation of pumping tests in dual porosity
aquifers.

The functions included in this section are:

warren_root_well_function, warren_root_solution_initial, warren_root_calculate_parameters, warren_root_solution, warren_root_WF_LT, warren_root_solution_dlogt
}

